[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Tadeusz joind J&J in 2022 as a Data Engineering Head amd from 2023 is also leading the Open Source group.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github\n  \n\n\n\n\n\n\nPawel is the Chief Engineer at Roche responsible for one of the biggest R codebase in Product Development. He graduated in 2015 from University of Warsaw, Econometrics and Quantitative Economics. Working with R for almost 10 years now, Pawel applied it in the field of geospatial data analysis, credit risk assessment, financial provisions calculation and clinical trial data analysis.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github\n  \n\n\n\n\n\n\nKarma Tarap leads Innovation and Open Source Initiatives at Bristol Myers Squibb, leveraging his decade-long experience in Statistical Programming. His multidisciplinary background spans immunology, bioinformatics, and data science.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github\n  \n\n\n\n\n\n\nPeyman Eshghi is a Data Scientist with over 16 years of experience, currently serving as the Technical Lead at Johnson & Johnson in the UK. Specializing in R programming, he leads interactive data visualization projects using R and Shiny and is the appointed product owner of the teal framework at Johnson & Johnson.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github\n  \n\n\n\n\n\n\nLars is a TAM Statistician at Boehringer Ingelheim mostly focusing on Software Engineering tasks. He joined Boehringer Ingelheim in 2022 and works a lot on R Shiny, Simulations and Bayesian Statistics.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "about.html#tadeusz-lewandowski",
    "href": "about.html#tadeusz-lewandowski",
    "title": "About",
    "section": "",
    "text": "Tadeusz joind J&J in 2022 as a Data Engineering Head amd from 2023 is also leading the Open Source group.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "about.html#pawel-rucki",
    "href": "about.html#pawel-rucki",
    "title": "About",
    "section": "",
    "text": "Pawel is the Chief Engineer at Roche responsible for one of the biggest R codebase in Product Development. He graduated in 2015 from University of Warsaw, Econometrics and Quantitative Economics. Working with R for almost 10 years now, Pawel applied it in the field of geospatial data analysis, credit risk assessment, financial provisions calculation and clinical trial data analysis.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "about.html#karma-tarap",
    "href": "about.html#karma-tarap",
    "title": "About",
    "section": "",
    "text": "Karma Tarap leads Innovation and Open Source Initiatives at Bristol Myers Squibb, leveraging his decade-long experience in Statistical Programming. His multidisciplinary background spans immunology, bioinformatics, and data science.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "about.html#peyman-eshghi",
    "href": "about.html#peyman-eshghi",
    "title": "About",
    "section": "",
    "text": "Peyman Eshghi is a Data Scientist with over 16 years of experience, currently serving as the Technical Lead at Johnson & Johnson in the UK. Specializing in R programming, he leads interactive data visualization projects using R and Shiny and is the appointed product owner of the teal framework at Johnson & Johnson.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "about.html#lars-andersen",
    "href": "about.html#lars-andersen",
    "title": "About",
    "section": "",
    "text": "Lars is a TAM Statistician at Boehringer Ingelheim mostly focusing on Software Engineering tasks. He joined Boehringer Ingelheim in 2022 and works a lot on R Shiny, Simulations and Bayesian Statistics.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "authors/tl.html#tadeusz-lewandowski",
    "href": "authors/tl.html#tadeusz-lewandowski",
    "title": "phuse-sde-2024",
    "section": "Tadeusz Lewandowski",
    "text": "Tadeusz Lewandowski\nTadeusz joind J&J in 2022 as a Data Engineering Head amd from 2023 is also leading the Open Source group.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "authors/pe.html#peyman-eshghi",
    "href": "authors/pe.html#peyman-eshghi",
    "title": "phuse-sde-2024",
    "section": "Peyman Eshghi",
    "text": "Peyman Eshghi\nPeyman Eshghi is a Data Scientist with over 16 years of experience, currently serving as the Technical Lead at Johnson & Johnson in the UK. Specializing in R programming, he leads interactive data visualization projects using R and Shiny and is the appointed product owner of the teal framework at Johnson & Johnson.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "authors/la.html#lars-andersen",
    "href": "authors/la.html#lars-andersen",
    "title": "phuse-sde-2024",
    "section": "Lars Andersen",
    "text": "Lars Andersen\nLars is a TAM Statistician at Boehringer Ingelheim mostly focusing on Software Engineering tasks. He joined Boehringer Ingelheim in 2022 and works a lot on R Shiny, Simulations and Bayesian Statistics.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "exercise_2.html",
    "href": "exercise_2.html",
    "title": "Exercise 2",
    "section": "",
    "text": "Enhance your application with pre-built modules!\n\nuse teal.modules.general::tm_front_page() to create the first “welcome screen” of the application\nuse teal.modules.general::tm_data_table() to create a data previewer module\nuse teal.modules.clinical::tm_t_summary() to create a demographic summary table:\n\nplease read the documentation - especially arm_var and summarize_vars argument and what data type it takes\nuse both \"ARM\" and \"ARMCD\" as arm_var\nuse \"SEX\", \"AGE\" and \"RACE\" as summarize_vars\n\n\n\nCode\n\nlibrary(dplyr)\nlibrary(random.cdisc.data)\nlibrary(nestcolor)\nlibrary(teal.modules.general)\nlibrary(teal.modules.clinical)\n\n## Data reproducible code ----\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  ADSL &lt;- radsl(cached = TRUE)\n  adsl_labels &lt;- col_labels(ADSL, fill = FALSE)\n\n  char_vars_asl &lt;- names(Filter(isTRUE, sapply(ADSL, is.character)))\n})\n# set datanames\ndatanames &lt;- c(\"ADSL\")\ndatanames(data) &lt;- datanames\n# set join_keys\njoin_keys(data) &lt;- default_cdisc_join_keys[datanames]\n\n\n## Reusable Configuration For Modules\nADSL &lt;- data[[\"ADSL\"]]\n\narm_vars &lt;- c(\"ARMCD\", \"ARM\")\n\ncs_arm_var &lt;- choices_selected(\n  choices = variable_choices(ADSL, subset = arm_vars),\n  selected = \"ARM\"\n)\n\n\ndate_vars_asl &lt;- names(ADSL)[vapply(ADSL, function(x) inherits(x, c(\"Date\", \"POSIXct\", \"POSIXlt\")), logical(1))]\ndemog_vars_asl &lt;- names(ADSL)[!(names(ADSL) %in% c(\"USUBJID\", \"STUDYID\", date_vars_asl))]\n\n\nheader &lt;- tags$span(\n  style = \"display: flex; align-items: center; justify-content: space-between; margin: 10px 0 10px 0;\",\n  tags$span(\"Exercise 1\", style = \"font-size: 30px;\"),\n)\n\nfooter &lt;- tags$p(\n  \"This teal app is brought to you by PhUSE SDE Basel\",\n)\n\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    tm_front_page(\n      label = \"App Info\",\n      header_text = c(\n        \"Info about input data source\" =\n          \"This app uses CDISC ADaM datasets randomly generated by `random.cdisc.data` R packages\"\n      ),\n      tables = list(`NEST packages used in this demo app` = data.frame(\n        Packages = c(\"teal.modules.general\", \"teal.modules.clinical\", \"random.cdisc.data\")\n      ))\n    ),\n    tm_data_table(\"Data Table\"),\n    tm_t_summary(\n      label = \"Demographic Table\",\n      dataname = \"ADSL\",\n      arm_var = cs_arm_var,\n      summarize_vars = choices_selected(\n        choices = variable_choices(ADSL, demog_vars_asl),\n        selected = c(\"SEX\", \"AGE\", \"RACE\")\n      )\n    )\n  ),\n  title = build_app_title(\"Basic Teal Demo App\"),\n  header = header,\n  footer = footer\n)\n\n[INFO] 2024-10-03 10:34:10.2242 pid:5994 token:[] teal.modules.general Initializing tm_front_page\n[INFO] 2024-10-03 10:34:10.2271 pid:5994 token:[] teal.modules.general Initializing tm_data_table\n\nif (Sys.getenv(\"QUARTO_ROOT\") == \"\") {\n  shinyApp(app$ui, app$server)\n}\n\n\n\nURL\nOpen in Shinylive\n\n\nApp"
  },
  {
    "objectID": "exercise_4.html",
    "href": "exercise_4.html",
    "title": "Exercise 4",
    "section": "",
    "text": "Further enhance your custom module by reproducibility and reporter feature!\n\nread \"qenv\" article on how to interact with internal qenv object - in particular: teal.code::get_code() function\nread “Getting started with teal.reporter” vignette to get to know how to implement reporter\n\nadd reporter and filter_panel_api to the list of arguments of module server function\nuse teal.reporter::simple_reporter_srv() module and create a report a custom card function using teal::TealReportCard class methods\n\n\n\nCode\n\nlibrary(random.cdisc.data)\nlibrary(teal)\nlibrary(teal.reporter)\nlibrary(teal.transform)\nlibrary(teal.widgets)\nlibrary(tern)\nlibrary(dplyr)\n\nmodules &lt;- list(\n  module(\n    label = \"Adhoc module\",\n    server = function(id, data, reporter, filter_panel_api){\n      moduleServer(id, function(input, output, session){\n        s_summary &lt;- function(x) {\n          if (is.numeric(x)) {\n            in_rows(\n              \"n\" = rcell(sum(!is.na(x)), format = \"xx\"),\n              \"Mean (sd)\" = rcell(c(mean(x, na.rm = TRUE), sd(x, na.rm = TRUE)), format = \"xx.xx (xx.xx)\"),\n              \"IQR\" = rcell(IQR(x, na.rm = TRUE), format = \"xx.xx\"),\n              \"min - max\" = rcell(range(x, na.rm = TRUE), format = \"xx.xx - xx.xx\")\n            )\n          } else if (is.factor(x)) {\n            vs &lt;- as.list(table(x))\n            do.call(in_rows, lapply(vs, rcell, format = \"xx\"))\n          } else {\n            stop(\"type not supported\")\n          }\n        }\n\n        observe({\n          ADSL &lt;- get_var(data(), \"ADSL\")\n          req(ADSL)\n          updateSelectInput(\n            inputId = \"param\",\n            choices = variable_choices(ADSL),\n            selected = c(\"AGE\"),\n          )\n        })\n\n        table_q &lt;- reactive({\n          data() |&gt;\n            within(\n              {\n                s_summary &lt;- my_summary\n                summary_lyt &lt;- basic_table() %&gt;%\n                  split_cols_by(var = \"ARM\") %&gt;%\n                  analyze(param, afun = s_summary)\n                summary_tbl &lt;- build_table(summary_lyt, ADSL)\n                summary_tbl\n              },\n              my_summary = s_summary,\n              param = input$param\n            )\n        })\n\n        output$table = renderUI({\n          renderPrint(table_q()[[\"summary_tbl\"]])\n        })\n\n        # ----------\n        # reproducibility\n        # ----------\n        observeEvent(input$src, {\n          showModal(\n            ui = modalDialog(\n              title = \"Reproducible R code\",\n              tags$pre(\n                get_code(table_q())\n              )\n            ),\n            session = session\n          )\n        })\n\n        # ----------\n        # reporter\n        # ----------\n        simple_reporter_srv(\n          \"simple_reporter\",\n          reporter = reporter,\n          card_fun = function(card = TealReportCard$new(), comment) {\n            card$set_name(\"Patient demographics\")\n            card$append_text(toString(table_q()[[\"summary_tbl\"]]), \"verbatim\")\n            card$append_fs(filter_panel_api$get_filter_state())\n            card$append_encodings(list(param = input$param))\n            if (!comment == \"\") {\n              card$append_text(\"Comment\", \"header3\")\n              card$append_text(comment)\n            }\n            card$append_src(get_code(table_q()))\n            card\n          }\n        )\n\n      })\n    },\n    ui = function(id) {\n      ns &lt;- NS(id)\n\n      standard_layout(\n        output = div(\n          fluidRow(column(\n            width = 12,\n            br(), hr(),\n            uiOutput(ns(\"table\"))\n          ))\n        ),\n        encoding = div(\n          simple_reporter_ui(ns(\"simple_reporter\")),\n          br(),\n          tags$label('Encodings', class = 'text-primary'),\n          helpText('Analysis Data:', tags$code('ADSL')),\n          selectInput(\n            inputId = ns('param'),\n            label = 'Demographic Parameter',\n            choices = NULL,\n            selected = NULL,\n            multiple = TRUE\n          ),\n          hr(),\n          actionButton(\n            inputId = ns(\"src\"),\n            label = \"Show R code\",\n            width = \"100%\"\n          )\n        )\n      )\n    },\n    datanames = c(\"ADSL\")\n  )\n)\n\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  ADSL &lt;- radsl(cached = TRUE)\n})\ndatanames(data) &lt;- c(\"ADSL\")\n\napp &lt;- init(\n  data = data,\n  modules = modules\n)\n\nif (Sys.getenv(\"QUARTO_ROOT\") == \"\") {\n  shinyApp(app$ui, app$server)\n}\n\n\n\nURL\nOpen in Shinylive\n\n\nApp"
  },
  {
    "objectID": "exercise_1.html",
    "href": "exercise_1.html",
    "title": "Exercise 1",
    "section": "",
    "text": "Create your first teal application!\n\nread teal::init() documentation\nuse random.cdisc.data::radsl(cached = TRUE) to create a dummy ADSL dataset\nuse teal::example_module() to create a dummy module\n\n\nCode\n\nlibrary(random.cdisc.data)\nlibrary(teal)\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  ADSL &lt;- radsl(cached = TRUE)\n})\n# set datanames\ndatanames &lt;- c(\"ADSL\")\ndatanames(data) &lt;- datanames\n\n## Reusable Configuration For Modules\nADSL &lt;- data[[\"ADSL\"]]\n\nheader &lt;- tags$span(\n  style = \"display: flex; align-items: center; justify-content: space-between; margin: 10px 0 10px 0;\",\n  tags$span(\"Excercise 1\", style = \"font-size: 30px;\"),\n)\n\nfooter &lt;- tags$p(\n  \"This teal app is brought to you by PhUSE SDE Basel.\"\n)\n\napp &lt;- init(\n  data = data,\n  modules = modules(\n    example_module()\n  ),\n  title = build_app_title(\"Basic Teal Demo App\"),\n  header = header,\n  footer = footer\n)\n\nif (Sys.getenv(\"QUARTO_ROOT\") == \"\") {\n  shinyApp(app$ui, app$server)\n}\n\n\n\nURL\nOpen in Shinylive\n\n\nApp"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "phuse-sde-2024",
    "section": "",
    "text": "Welcome in the PHUSE Single Day Event!"
  },
  {
    "objectID": "index.html#packages-used",
    "href": "index.html#packages-used",
    "title": "phuse-sde-2024",
    "section": "Packages used:",
    "text": "Packages used:\n teal - Shiny-based interactive exploration framework for analyzing data\n tern - Table, Listings, and Graphs (TLG) library for common outputs used in clinical trials\n rtables - Reporting tables with R\nrandom.cdisc.data - Create random CDISC data\nteal.modules.general - General Purpose Teal Modules\nteal.modules.clinical - Provides teal modules for the standard clinical trials outputs"
  },
  {
    "objectID": "index.html#further-reads",
    "href": "index.html#further-reads",
    "title": "phuse-sde-2024",
    "section": "Further reads:",
    "text": "Further reads:\n\nGetting started with teal\nteal Technical Blueprint - for developers or advanced users\nteal gallery - A gallery of sample apps based on the teal framework.\nTLG Catalog - A catalog of Tables, Listings and Graphs (TLGs) created with NEST R packages\npharmaverse - Packages for clinical reporting workflows"
  },
  {
    "objectID": "authors/template.html#john-doe",
    "href": "authors/template.html#john-doe",
    "title": "phuse-sde-2024",
    "section": "John Doe",
    "text": "John Doe\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "authors/pr.html#pawel-rucki",
    "href": "authors/pr.html#pawel-rucki",
    "title": "phuse-sde-2024",
    "section": "Pawel Rucki",
    "text": "Pawel Rucki\nPawel is the Chief Engineer at Roche responsible for one of the biggest R codebase in Product Development. He graduated in 2015 from University of Warsaw, Econometrics and Quantitative Economics. Working with R for almost 10 years now, Pawel applied it in the field of geospatial data analysis, credit risk assessment, financial provisions calculation and clinical trial data analysis.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "authors/kt.html#karma-tarap",
    "href": "authors/kt.html#karma-tarap",
    "title": "phuse-sde-2024",
    "section": "Karma Tarap",
    "text": "Karma Tarap\nKarma Tarap leads Innovation and Open Source Initiatives at Bristol Myers Squibb, leveraging his decade-long experience in Statistical Programming. His multidisciplinary background spans immunology, bioinformatics, and data science.\n\n\n\n  \n    \n     Linkedin\n  \n  \n    \n     Github"
  },
  {
    "objectID": "exercise_3.html",
    "href": "exercise_3.html",
    "title": "Exercise 3",
    "section": "",
    "text": "Create your custom module!\nCreate a custom module that does a simple demographic summary table on user specified columns.\n\nread teal::module() documentation\nread “Creating Custom Modules” vignette\nread \"qenv\" article on how to interact with internal qenv object - in particular: teal.code::within() function\n\n\nCode\n\nlibrary(random.cdisc.data)\nlibrary(teal)\nlibrary(teal.transform)\nlibrary(teal.widgets)\nlibrary(tern)\nlibrary(dplyr)\n\nmodules &lt;- list(\n  module(\n    label = \"Adhoc module\",\n    server = function(id, data){\n      moduleServer(id, function(input, output, session){\n        s_summary &lt;- function(x) {\n          if (is.numeric(x)) {\n            in_rows(\n              \"n\" = rcell(sum(!is.na(x)), format = \"xx\"),\n              \"Mean (sd)\" = rcell(c(mean(x, na.rm = TRUE), sd(x, na.rm = TRUE)), format = \"xx.xx (xx.xx)\"),\n              \"IQR\" = rcell(IQR(x, na.rm = TRUE), format = \"xx.xx\"),\n              \"min - max\" = rcell(range(x, na.rm = TRUE), format = \"xx.xx - xx.xx\")\n            )\n          } else if (is.factor(x)) {\n            vs &lt;- as.list(table(x))\n            do.call(in_rows, lapply(vs, rcell, format = \"xx\"))\n          } else {\n            stop(\"type not supported\")\n          }\n        }\n\n        observe({\n          ADSL &lt;- get_var(data(), \"ADSL\")\n          req(ADSL)\n          updateSelectInput(\n            inputId = \"param\",\n            choices = variable_choices(ADSL),\n            selected = c(\"AGE\"),\n          )\n        })\n\n        table_q &lt;- reactive({\n          data() |&gt;\n            within(\n              {\n                s_summary &lt;- my_summary\n                summary_lyt &lt;- basic_table() %&gt;%\n                  split_cols_by(var = \"ARM\") %&gt;%\n                  analyze(param, afun = s_summary)\n                summary_tbl &lt;- build_table(summary_lyt, ADSL)\n                summary_tbl\n              },\n              my_summary = s_summary,\n              param = input$param\n            )\n        })\n\n        output$table = renderUI({\n          renderPrint(table_q()[[\"summary_tbl\"]])\n        })\n\n      })\n    },\n    ui = function(id) {\n      ns &lt;- NS(id)\n\n      standard_layout(\n        output = div(\n          fluidRow(\n            column(\n              width = 12,\n              br(), hr(),\n              uiOutput(ns(\"table\"))\n            )\n          )\n        ),\n        encoding = div(\n          br(),\n          tags$label('Encodings', class = 'text-primary'),\n          helpText('Analysis Data:', tags$code('ADSL')),\n          selectInput(\n            inputId = ns('param'),\n            label = 'Demographic Parameter',\n            choices = NULL,\n            selected = NULL,\n            multiple = TRUE\n          )\n        )\n      )\n    },\n    datanames = c(\"ADSL\")\n  )\n)\n\n\ndata &lt;- teal_data()\ndata &lt;- within(data, {\n  ADSL &lt;- radsl(cached = TRUE)\n})\ndatanames(data) &lt;- c(\"ADSL\")\n\napp &lt;- init(\n  data = data,\n  modules = modules\n)\n\nif (Sys.getenv(\"QUARTO_ROOT\") == \"\") {\n  shinyApp(app$ui, app$server)\n}\n\n\n\nURL\nOpen in Shinylive\n\n\nApp"
  }
]