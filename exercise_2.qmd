---
title: "Exercise 2"
---

Enhance your application with pre-built modules!

- use [`teal.modules.general::tm_front_page()`](https://insightsengineering.github.io/teal.modules.general/latest-tag/reference/tm_front_page.html) to create the first "welcome screen" of the application
- use [`teal.modules.general::tm_data_table()`](https://insightsengineering.github.io/teal.modules.general/latest-tag/reference/tm_data_table.html) to create a data previewer module
- use [`teal.modules.clinical::tm_t_summary()`](https://insightsengineering.github.io/teal.modules.clinical/latest-tag/reference/tm_t_summary.html) to create a demographic summary table:
  - please read the documentation - especially `arm_var` and `summarize_vars` argument and what data type it takes
  - use both `"ARM"` and `"ARMCD"` as `arm_var`
  - use `"SEX"`, `"AGE"` and `"RACE"` as `summarize_vars`

### Code

```{r ex, message = FALSE}
library(dplyr)
library(random.cdisc.data)
library(nestcolor)
library(teal.modules.general)
library(teal.modules.clinical)

## Data reproducible code ----
data <- teal_data()
data <- within(data, {
  ADSL <- radsl(cached = TRUE)
  adsl_labels <- col_labels(ADSL, fill = FALSE)

  char_vars_asl <- names(Filter(isTRUE, sapply(ADSL, is.character)))
})
# set datanames
datanames <- c("ADSL")
datanames(data) <- datanames
# set join_keys
join_keys(data) <- default_cdisc_join_keys[datanames]


## Reusable Configuration For Modules
ADSL <- data[["ADSL"]]

arm_vars <- c("ARMCD", "ARM")

cs_arm_var <- choices_selected(
  choices = variable_choices(ADSL, subset = arm_vars),
  selected = "ARM"
)


date_vars_asl <- names(ADSL)[vapply(ADSL, function(x) inherits(x, c("Date", "POSIXct", "POSIXlt")), logical(1))]
demog_vars_asl <- names(ADSL)[!(names(ADSL) %in% c("USUBJID", "STUDYID", date_vars_asl))]


header <- tags$span(
  style = "display: flex; align-items: center; justify-content: space-between; margin: 10px 0 10px 0;",
  tags$span("Exercise 1", style = "font-size: 30px;"),
)

footer <- tags$p(
  "This teal app is brought to you by PhUSE SDE Basel",
)


app <- init(
  data = data,
  modules = modules(
    tm_front_page(
      label = "App Info",
      header_text = c(
        "Info about input data source" =
          "This app uses CDISC ADaM datasets randomly generated by `random.cdisc.data` R packages"
      ),
      tables = list(`NEST packages used in this demo app` = data.frame(
        Packages = c("teal.modules.general", "teal.modules.clinical", "random.cdisc.data")
      ))
    ),
    tm_data_table("Data Table"),
    tm_t_summary(
      label = "Demographic Table",
      dataname = "ADSL",
      arm_var = cs_arm_var,
      summarize_vars = choices_selected(
        choices = variable_choices(ADSL, demog_vars_asl),
        selected = c("SEX", "AGE", "RACE")
      )
    )
  ),
  title = build_app_title("Basic Teal Demo App"),
  header = header,
  footer = footer
)

if (Sys.getenv("QUARTO_ROOT") == "") {
  shinyApp(app$ui, app$server)
}
```

```{r save_script, include = FALSE}
code <- paste0(knitr::knit_code$get("ex"), collapse = "\n")
writeLines(code, "scripts/exercise_2.R")
```

### URL

```{r shinylive_url, echo = FALSE, results = 'asis', purl = FALSE}
code <- paste0(knitr::knit_code$get("ex"), collapse = "\n")
url <- roxy.shinylive::create_shinylive_url(code)
cat(sprintf("[Open in Shinylive](%s)\n\n", url))
```

### App

```{r shinylive_iframe, echo = FALSE, out.width = '150%', out.extra = 'style = "position: relative; z-index:1"', purl = FALSE}
knitr::include_url(url, height = "800px")
```
